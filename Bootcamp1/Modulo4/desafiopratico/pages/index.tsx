import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";

export default function Home() {
  const [criptoData, setCriptoData] = useState([]);
  const [pageNumber, setPageNumber] = useState<number>(1);
  const [previousButton, setPreviousButton] = useState<boolean>(false);
  const [nextButton, setNextButton] = useState<boolean>(false);
  const [inputValue, setInputValue] = useState<string>("");

  const urlData = `https://api.coingecko.com/api/v3/exchanges/?per_page=100&page=${pageNumber}`;

  useEffect(() => {
    async function getData() {
      const data = await fetch(urlData).then((resp) => resp.json());
      setCriptoData(data);
    }

    getData();
  }, []);

  useEffect(() => {
    async function getData() {
      const data = await fetch(urlData).then((resp) => resp.json());
      setCriptoData(data);
    }
    getData();

    function buttonsStatus() {
      if (pageNumber === 1) {
        setPreviousButton(true);
      } else if (pageNumber === 5) {
        setNextButton(true);
      } else {
        setPreviousButton(false);
        setNextButton(false);
      }
    }
    buttonsStatus();

    function filterItems() {
      console.log(inputValue);
    }

    filterItems();
  }, [pageNumber, inputValue]);

  function nextPage() {
    setPageNumber((prev) => prev + 1);
  }

  function previousPage() {
    setPageNumber((prev) => prev - 1);
  }

  return (
    <>
      <Head>
        <title>Lista de CriptoMoedas</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div className={styles.buttonsDiv}>
          <button disabled={previousButton} onClick={previousPage}>
            Página Anterior
          </button>
          <button disabled={nextButton} onClick={nextPage}>
            Próxima Página
          </button>
        </div>

        <div className={styles.searchDiv}>
          <input
            type="text"
            placeholder="Filtrar por nome"
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
          />
        </div>

        <div className={styles.summaryDiv}>
          <h4>Exibindo x de y</h4>
        </div>

        <ul className={styles.itemsContainer}>
          {criptoData.map((item: any) => (
            <li key={item.id}>
              <div className={styles.imageNameContainer}>
                <Image
                  src={item.image}
                  alt={item.name}
                  width={40}
                  height={40}
                />
                <h3>{item.name}</h3>
              </div>

              <p>Ano de criação: {item.year_established}</p>
              <p>País: {item.country}</p>
              <p>Pontuação: {item.trust_score}</p>
              <p>
                Volume de trade (24 horas):{" "}
                {item.trade_volume_24h_btc.toFixed(2)}
              </p>
            </li>
          ))}
        </ul>
      </div>
    </>
  );
}
